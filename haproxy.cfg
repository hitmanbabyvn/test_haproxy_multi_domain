global
        log /dev/log    local0
        log /dev/log    local1 notice
        # chroot /var/lib/haproxy
        # stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        # user haproxy
        # group haproxy
        # daemon

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 10s
        timeout client  60s
        timeout server  60s
        # errorfile 400 /etc/haproxy/errors/400.http
        # errorfile 403 /etc/haproxy/errors/403.http
        # errorfile 408 /etc/haproxy/errors/408.http
        # errorfile 500 /etc/haproxy/errors/500.http
        # errorfile 502 /etc/haproxy/errors/502.http
        # errorfile 503 /etc/haproxy/errors/503.http
        # errorfile 504 /etc/haproxy/errors/504.http

frontend http_in
        mode http
        option httplog
        bind *:80
        bind *:8090
        option forwardfor
        # acl host_server1 hdr(host) -i entroinfo.xyz
        acl host_server1 hdr(host) -i aaa.com aaa.com:8080
        acl host_server2 hdr(host) -i bbb.com bbb.com:8080
        acl host_server3 hdr(host) -i ccc.com ccc.com:8080
        use_backend http_server1 if host_server1
        use_backend http_server2 if host_server2
        use_backend http_server3 if host_server3

backend http_server1
        mode http
        option httplog
        option forwardfor
        server server1 weba:80
        # server server1 192.168.1.27:8081

backend http_server2
        mode http
        option httplog
        option forwardfor
        server server2 webb:80
        # server server2 192.168.1.27:8082

backend http_server3
        mode http
        option httplog
        option forwardfor
        server server3 webc:80
        # server server3 192.168.1.27:8083

# frontend https_in
#         mode tcp
#         option tcplog
#         bind *:443
#         acl tls req.ssl_hello_type 1
#         tcp-request inspect-delay 5s
#         tcp-request content accept if tls
        
#         acl host_server1 req.ssl_sni -i entroinfo.xyz
#         acl host_server1 req.ssl_sni -i www.entroinfo.xyz
#         acl host_server2 req.ssl_sni -i sub1.kubehttps.xyz
#         acl host_server3 req.ssl_sni -i sub2.kubehttps.xyz

#         use_backend https_server1 if host_server1
#         use_backend https_server2 if host_server2
#         use_backend https_server3 if host_server3

# backend https_server1
#         mode tcp
#         option tcplog
#         option ssl-hello-chk
#         server server1 server1:443

# backend https_server2
#         mode tcp
#         option tcplog
#         option ssl-hello-chk
#         server server2 server2:443

# backend https_server3
#         mode tcp
#         option tcplog
#         option ssl-hello-chk
#         server server3 server3:443